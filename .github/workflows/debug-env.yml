name: Debug Environment Variables

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  debug-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check GitHub Secrets (masked)
        run: |
          echo "=== Checking which GitHub Secrets are available ==="
          echo "NEXT_PUBLIC_SUPABASE_URL is: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL && 'SET ✓' || 'NOT SET ✗' }}"
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY is: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY && 'SET ✓' || 'NOT SET ✗' }}"
          echo "NEXT_PUBLIC_OPENWEATHER_API_KEY is: ${{ secrets.NEXT_PUBLIC_OPENWEATHER_API_KEY && 'SET ✓' || 'NOT SET ✗' }}"
          echo "VERCEL_TOKEN is: ${{ secrets.VERCEL_TOKEN && 'SET ✓' || 'NOT SET ✗' }}"
          echo "VERCEL_ORG_ID is: ${{ secrets.VERCEL_ORG_ID && 'SET ✓' || 'NOT SET ✗' }}"
          echo "VERCEL_PROJECT_ID is: ${{ secrets.VERCEL_PROJECT_ID && 'SET ✓' || 'NOT SET ✗' }}"

      - name: Install Vercel CLI
        if: ${{ secrets.VERCEL_TOKEN }}
        run: npm i -g vercel@latest

      - name: Check Vercel Environment Variables
        if: ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "=== Pulling Vercel preview environment ==="
          vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          
          echo "=== Checking .vercel/.env.preview.local ==="
          if [ -f .vercel/.env.preview.local ]; then
            echo "File exists. Checking for required variables (keys only, not values):"
            grep -q "NEXT_PUBLIC_SUPABASE_URL" .vercel/.env.preview.local && echo "✓ NEXT_PUBLIC_SUPABASE_URL found" || echo "✗ NEXT_PUBLIC_SUPABASE_URL missing"
            grep -q "NEXT_PUBLIC_SUPABASE_ANON_KEY" .vercel/.env.preview.local && echo "✓ NEXT_PUBLIC_SUPABASE_ANON_KEY found" || echo "✗ NEXT_PUBLIC_SUPABASE_ANON_KEY missing"
            grep -q "OPENWEATHER_API_KEY\|NEXT_PUBLIC_OPENWEATHER_API_KEY" .vercel/.env.preview.local && echo "✓ OpenWeather API key found" || echo "✗ OpenWeather API key missing"
          else
            echo "✗ .vercel/.env.preview.local not found - no environment variables from Vercel"
          fi
