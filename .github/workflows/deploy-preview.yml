name: Deploy Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  deployments: write

jobs:
  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create environment file for preview
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}
          NEXT_PUBLIC_OPENWEATHER_API_KEY=${{ secrets.NEXT_PUBLIC_OPENWEATHER_API_KEY || 'test-api-key' }}
          NEXT_PUBLIC_GOOGLE_POLLEN_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_POLLEN_API_KEY || '' }}
          NEXT_PUBLIC_GOOGLE_AIR_QUALITY_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_AIR_QUALITY_API_KEY || '' }}
          EOF

      - name: Build application
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Deploy to Vercel (Preview)
        id: vercel-deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🚀 Preview Deployment')
            );

            const commentBody = `## 🚀 Preview Deployment

            Your changes have been deployed to a preview environment!

            **🔗 Preview URL:** ${{ steps.vercel-deploy.outputs.preview-url }}

            ### 🧪 Test Your Changes
            - [ ] Verify the main weather search functionality
            - [ ] Test the new features or bug fixes
            - [ ] Check responsive design on mobile
            - [ ] Confirm theme switching works
            - [ ] Test any authentication features

            ### 📝 Notes
            - This preview will be automatically updated with new commits
            - Preview environment uses test API keys where needed
            - Some features may be limited in the preview environment

            ---
            *Preview deployed from commit: ${context.sha.substring(0, 7)}*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: deploy-preview
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Audit preview deployment
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy-preview.outputs.preview-url }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Comment Lighthouse results
        uses: actions/github-script@v7
        with:
          script: |
            const results = ${{ steps.lighthouse.outputs.manifest }};
            const links = ${{ steps.lighthouse.outputs.links }};

            const formatScore = (score) => {
              const percentage = Math.round(score * 100);
              if (percentage >= 90) return `🟢 ${percentage}`;
              if (percentage >= 50) return `🟡 ${percentage}`;
              return `🔴 ${percentage}`;
            };

            const comment = `## ⚡ Lighthouse Performance Report

            | Category | Score |
            |----------|-------|
            | Performance | ${formatScore(results[0].summary.performance)} |
            | Accessibility | ${formatScore(results[0].summary.accessibility)} |
            | Best Practices | ${formatScore(results[0].summary['best-practices'])} |
            | SEO | ${formatScore(results[0].summary.seo)} |

            [📊 View Full Report](${links[0]})

            ### Recommendations
            - Ensure performance score stays above 90
            - Address any accessibility issues
            - Maintain SEO best practices

            ---
            *Report generated for commit: ${context.sha.substring(0, 7)}*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });