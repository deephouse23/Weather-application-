name: Playwright Tests on Vercel Preview

on:
  pull_request:
    branches: [ main ]

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Setup project link and pull env (preview)
        run: vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"

      - name: Build with Vercel
        run: vercel build --token "$VERCEL_TOKEN" --debug

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy prebuilt to Vercel
        id: vercel-deploy
        run: |
          set -euo pipefail
          url=$(vercel deploy --prebuilt --yes --token "$VERCEL_TOKEN" --json | jq -r '.url')
          echo "deployment-url=https://$url" >> "$GITHUB_OUTPUT"
          echo "Preview URL: https://$url"

      - name: Wait for deployment to be ready
        env:
          URL: ${{ steps.vercel-deploy.outputs.deployment-url }}
        run: |
          set -euo pipefail
          echo "Waiting for $URL to be ready..."
          for i in {1..40}; do
            status=$(curl -sS -o /dev/null -w "%{http_code}" "$URL")
            if [[ "$status" == "200" || "$status" == "301" || "$status" == "302" || "$status" == "404" ]]; then
              echo "Deployment is responding with HTTP $status"
              break
            fi
            echo "Attempt $i/40: not ready (status $status). Retrying in 10s..."
            sleep 10
          done
          curl -f "$URL" || (echo "Deployment not ready at $URL" && exit 1)

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.vercel-deploy.outputs.deployment-url }}
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7