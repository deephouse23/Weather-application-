"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[780],{2222:(e,o,t)=>{t.d(o,{A:()=>c});var n=t(5155),a=t(2115),l=t(1154),i=t(7924),r=t(4516),s=t(3999);function c(e){let{onSearch:o,onLocationSearch:t,isLoading:c,error:d,isDisabled:u=!1,rateLimitError:h,theme:g=s.Eg.THEMES.DARK,hideLocationButton:p=!1}=e,[m,y]=(0,a.useState)(""),f=(e=>{switch(e){case"dark":return{background:"bg-[#0f0f0f]",cardBg:"bg-[#0f0f0f]",borderColor:"border-[#00d4ff]",text:"text-[#e0e0e0]",headerText:"text-[#00d4ff]",secondaryText:"text-[#e0e0e0]",accentText:"text-[#00d4ff]",successText:"text-[#00ff00]",glow:"glow-dark",specialBorder:"border-[#00d4ff]",buttonHover:"hover:bg-[#00d4ff] hover:text-[#0f0f0f]",placeholderText:"placeholder-[#a0a0a0]",hoverBorder:"hover:border-[#00d4ff]",buttonBg:"bg-[#0f0f0f]",buttonBorder:"border-[#00d4ff]",buttonText:"text-[#e0e0e0]",errorBg:"bg-[#1a0f0f]",errorText:"text-[#ff4444]",warningText:"text-[#ff6b6b]"};case"miami":return{background:"bg-[#0a0025]",cardBg:"bg-[#0a0025]",borderColor:"border-[#ff1493]",text:"text-[#00ffff]",headerText:"text-[#ff1493]",secondaryText:"text-[#00ffff]",accentText:"text-[#ff1493]",successText:"text-[#00ff00]",glow:"glow-miami",specialBorder:"border-[#ff1493]",buttonHover:"hover:bg-[#ff1493] hover:text-[#0a0025]",placeholderText:"placeholder-[#b0d4f1]",hoverBorder:"hover:border-[#ff1493]",buttonBg:"bg-[#0a0025]",buttonBorder:"border-[#ff1493]",buttonText:"text-[#00ffff]",errorBg:"bg-[#1a0025]",errorText:"text-[#ff1493]",warningText:"text-[#ff69b4]"};case"tron":return{background:"bg-black",cardBg:"bg-black",borderColor:"border-[#00FFFF]",text:"text-white",headerText:"text-[#00FFFF]",secondaryText:"text-[#00FFFF]",accentText:"text-[#00FFFF]",successText:"text-[#00ff00]",glow:"glow-tron",specialBorder:"border-[#00FFFF]",buttonHover:"hover:bg-[#00FFFF] hover:text-black",placeholderText:"placeholder-[#88CCFF]",hoverBorder:"hover:border-[#00FFFF]",buttonBg:"bg-black",buttonBorder:"border-[#00FFFF]",buttonText:"text-white",errorBg:"bg-[#001111]",errorText:"text-[#FF4444]",warningText:"text-[#FF6B6B]"}}})(g),w=c||u;return(0,n.jsxs)("div",{className:"mb-4 sm:mb-6 w-full max-w-2xl mx-auto",children:[(0,n.jsx)("div",{className:"mb-2 sm:mb-3 text-center px-2",children:(0,n.jsxs)("div",{className:"text-xs sm:text-sm ".concat(f.secondaryText," uppercase tracking-wider break-words"),children:[(0,n.jsx)("span",{className:"hidden sm:inline",children:"► 90210 • NEW YORK, NY • LONDON, UK ◄"}),(0,n.jsx)("span",{className:"sm:hidden",children:"► ZIP • CITY, STATE • CITY, COUNTRY ◄"})]})}),(0,n.jsx)("form",{onSubmit:e=>{e.preventDefault(),!m.trim()||c||u||o(m.trim())},className:"mb-3 sm:mb-4 px-2 sm:px-0",children:(0,n.jsxs)("div",{className:"relative",children:[(0,n.jsx)("input",{type:"text",value:m,onChange:e=>y(e.target.value),placeholder:u?"Rate limit reached...":"ZIP, City+State, or City+Country...",disabled:w,className:"w-full px-3 sm:px-4 py-3 sm:py-4 pr-10 sm:pr-12 ".concat(f.cardBg," border-2 ").concat(f.borderColor," ").concat(f.text," ").concat(f.placeholderText," \n                     font-mono text-sm sm:text-base uppercase tracking-wider focus:outline-none ").concat(f.hoverBorder," \n                     transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed pixel-font ").concat(f.specialBorder,"\n                     min-h-[48px] touch-manipulation"),style:{imageRendering:"pixelated",fontFamily:"monospace",fontSize:"clamp(12px, 3vw, 16px)"}}),(0,n.jsx)("button",{type:"submit",disabled:w||!m.trim(),className:"absolute right-2 sm:right-3 top-1/2 transform -translate-y-1/2 p-2 ".concat(f.secondaryText," hover:text-[#ffe66d] \n                     transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed ").concat(f.glow,"\n                     min-w-[44px] min-h-[44px] flex items-center justify-center touch-manipulation"),children:c?(0,n.jsx)(l.A,{className:"w-4 h-4 sm:w-5 sm:h-5 animate-spin"}):(0,n.jsx)(i.A,{className:"w-4 h-4 sm:w-5 sm:h-5"})})]})}),!p&&(0,n.jsx)("div",{className:"flex justify-center px-2 sm:px-0",children:(0,n.jsxs)("button",{onClick:()=>{c||u||t()},disabled:w,className:"flex items-center gap-2 px-4 sm:px-6 py-3 ".concat(f.buttonBg," border ").concat(f.buttonBorder," \n                     ").concat(f.buttonText," ").concat(f.buttonHover," transition-all duration-200 \n                     text-xs sm:text-sm uppercase tracking-wider font-mono disabled:opacity-50 \n                     disabled:cursor-not-allowed pixel-font ").concat(f.specialBorder,"\n                     min-h-[48px] touch-manipulation w-full sm:w-auto max-w-xs"),style:{imageRendering:"pixelated",fontFamily:"monospace",fontSize:"clamp(11px, 2.5vw, 14px)"},children:[(0,n.jsx)(r.A,{className:"w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0"}),(0,n.jsx)("span",{className:"break-words text-center",children:c?"LOADING...":u?"RATE LIMITED":"USE MY LOCATION"})]})}),(d||h)&&(0,n.jsxs)("div",{className:"p-3 sm:p-4 mx-2 sm:mx-0 ".concat(f.errorBg," border ").concat(f.errorText," \n                      text-xs sm:text-sm text-center pixel-font ").concat(f.specialBorder),children:[(0,n.jsxs)("div",{className:"flex items-center justify-center gap-2 mb-2 sm:mb-3",children:[(0,n.jsx)("span",{children:"⚠"}),(0,n.jsx)("span",{className:"uppercase tracking-wider break-words",children:d||h})]}),(null==d?void 0:d.includes("not found"))&&(0,n.jsxs)("div",{className:"space-y-2",children:[(0,n.jsx)("div",{className:"text-xs ".concat(f.secondaryText," normal-case"),children:"Try these format examples:"}),(0,n.jsxs)("div",{className:"grid grid-cols-1 gap-1 text-xs",children:[(0,n.jsx)("button",{onClick:()=>y("90210"),className:"".concat(f.warningText," hover:text-[#00d4ff] transition-colors cursor-pointer underline ").concat(f.glow,"\n                           py-2 px-3 touch-manipulation min-h-[44px] text-left"),disabled:u,children:"► ZIP: 90210"}),(0,n.jsx)("button",{onClick:()=>y("New York, NY"),className:"".concat(f.warningText," hover:text-[#00d4ff] transition-colors cursor-pointer underline ").concat(f.glow,"\n                           py-2 px-3 touch-manipulation min-h-[44px] text-left"),disabled:u,children:"► City + State: New York, NY"}),(0,n.jsx)("button",{onClick:()=>y("London, UK"),className:"".concat(f.warningText," hover:text-[#00d4ff] transition-colors cursor-pointer underline ").concat(f.glow,"\n                           py-2 px-3 touch-manipulation min-h-[44px] text-left"),disabled:u,children:"► City + Country: London, UK"})]})]}),(null==d?void 0:d.includes("API key"))&&(0,n.jsx)("div",{className:"text-xs ".concat(f.secondaryText," normal-case mt-2 break-words"),children:"Please configure your OpenWeatherMap API key in the environment variables."}),(null==d?void 0:d.includes("location"))&&(null==d?void 0:d.includes("denied"))&&(0,n.jsx)("div",{className:"text-xs ".concat(f.secondaryText," normal-case mt-2 break-words"),children:"Location access was denied. Try searching manually or enable location permissions."}),((null==d?void 0:d.includes("network"))||(null==d?void 0:d.includes("fetch")))&&(0,n.jsx)("div",{className:"text-xs ".concat(f.secondaryText," normal-case mt-2 break-words"),children:"Network error. Please check your internet connection and try again."})]})]})}},5631:(e,o,t)=>{t.d(o,{fetchWeatherByLocation:()=>_,v:()=>O});var n=t(9509);let a="https://api.openweathermap.org/data/2.5",l="https://api.openweathermap.org/geo/1.0",i=()=>{console.log("\uD83D\uDD0D ENVIRONMENT VARIABLE DEBUG:"),console.log("NODE_ENV:","production"),console.log("REACT_APP_OPENWEATHER_API_KEY:",n.env.REACT_APP_OPENWEATHER_API_KEY?"SET":"MISSING"),console.log("NEXT_PUBLIC_OPENWEATHER_API_KEY:",n.env.NEXT_PUBLIC_OPENWEATHER_API_KEY?"SET":"MISSING"),console.log("All env vars starting with REACT_APP_:",Object.keys(n.env).filter(e=>e.startsWith("REACT_APP_"))),console.log("All env vars starting with NEXT_PUBLIC_:",Object.keys(n.env).filter(e=>e.startsWith("NEXT_PUBLIC_")));let e=n.env.NEXT_PUBLIC_OPENWEATHER_API_KEY||n.env.REACT_APP_OPENWEATHER_API_KEY;if(!e)throw console.error("❌ OpenWeather API key is missing!"),console.error("Please set either NEXT_PUBLIC_OPENWEATHER_API_KEY or REACT_APP_OPENWEATHER_API_KEY environment variable."),console.error("For Next.js, use NEXT_PUBLIC_OPENWEATHER_API_KEY"),Error("OpenWeather API key not configured");return console.log("✅ OpenWeather API key found:",e.substring(0,8)+"..."),e},r=()=>{let e=n.env.NEXT_PUBLIC_GOOGLE_POLLEN_API_KEY||n.env.REACT_APP_GOOGLE_POLLEN_API_KEY;return e?(console.log("✅ Google Pollen API key found:",e.substring(0,8)+"..."),e):(console.warn("⚠️ Google Pollen API key is missing!"),console.warn("Please set either NEXT_PUBLIC_GOOGLE_POLLEN_API_KEY or REACT_APP_GOOGLE_POLLEN_API_KEY environment variable for real pollen data."),null)},s=e=>{if(e<0||e>360)return"N";let o=(e%360+360)%360;return o>=337.5||o<22.5?"N":o>=22.5&&o<67.5?"NE":o>=67.5&&o<112.5?"E":o>=112.5&&o<157.5?"SE":o>=157.5&&o<202.5?"S":o>=202.5&&o<247.5?"SW":o>=247.5&&o<292.5?"W":o>=292.5&&o<337.5?"NW":"N"},c=(e,o)=>{let t=1e3*e,n=new Date(o?t+1e3*o:t),a=n.getUTCHours(),l=n.getUTCMinutes().toString().padStart(2,"0");return"".concat(0===a?12:a>12?a-12:a,":").concat(l," ").concat(a>=12?"pm":"am")},d=e=>Math.round((e-32)*5/9),u=e=>"US"===e||"USA"===e,h=e=>u(e),g=(e,o)=>{console.log("Formatting temperature:",{temp:e,countryCode:o});let t=h(o);if(console.log("Using Fahrenheit:",t),t)return{value:e,unit:"\xb0F",display:"".concat(Math.round(e),"\xb0F")};{let o=d(e);return{value:o,unit:"\xb0C",display:"".concat(o,"\xb0C")}}},p=e=>e.trim().replace(/\s+/g," ").replace(/[""'']/g,'"').replace(/[–—]/g,"-"),m=e=>{let o=p(e);if(/^\d{5}(-\d{4})?$/.test(o))return{query:o,type:"zip",zipCode:o,country:"US"};if(/^[A-Z]{1,2}\d[A-Z\d]?\s?\d[A-Z]{2}$/i.test(o))return{query:o,type:"zip",zipCode:o.replace(/\s/g,""),country:"GB"};if(/^[A-Z]\d[A-Z]\s?\d[A-Z]\d$/i.test(o))return{query:o,type:"zip",zipCode:o.replace(/\s/g,""),country:"CA"};if(/^[A-Z0-9]{3,10}$/i.test(o)&&o.length>=3)return{query:o,type:"zip",zipCode:o};if(o.includes(",")){let e=o.split(",").map(e=>e.trim()).filter(e=>e.length>0);if(e.length>=2){let[t,n,...a]=e,l=t.replace(/[^\w\s\-'.]/g,"").trim();if(!l)return{query:o,type:"city_only",city:o};let i=n.toLowerCase();return["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DC"].includes(n.toUpperCase())||["alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","georgia","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","new hampshire","new jersey","new mexico","new york","north carolina","north dakota","ohio","oklahoma","oregon","pennsylvania","rhode island","south carolina","south dakota","tennessee","texas","utah","vermont","virginia","washington","west virginia","wisconsin","wyoming","district of columbia"].includes(i)?{query:o,type:"city_state",city:l,state:n,country:"US"}:["US","GB","UK","CA","AU","DE","FR","IT","ES","JP","CN","IN","BR","RU","MX","NL","BE","CH","AT","SE","NO","DK","FI","IE","PT","GR","TR","PL","CZ","HU","RO","BG","HR","SI","SK","LT","LV","EE","IS","MT","CY","LU"].includes(n.toUpperCase())||["united states","united kingdom","canada","australia","germany","france","italy","spain","japan","china","india","brazil","russia","mexico","netherlands","belgium","switzerland","austria","sweden","norway","denmark","finland","ireland","portugal","greece","turkey","poland","czech republic","hungary","romania","bulgaria","croatia","slovenia","slovakia","lithuania","latvia","estonia","iceland","malta","cyprus","luxembourg"].includes(i)?{query:o,type:"city_country",city:l,country:n}:a.length>0?{query:o,type:"city_country",city:l,state:n,country:a[0]}:{query:o,type:"city_country",city:l,country:n}}}let t=o.replace(/[^\w\s\-'.]/g,"").trim();return{query:o,type:"city_only",city:t||o}},y=e=>{let o=e.toLowerCase();return o.includes("clear")||o.includes("sun")?"sunny":o.includes("cloud")?"cloudy":o.includes("rain")||o.includes("drizzle")?"rainy":o.includes("snow")||o.includes("sleet")?"snowy":o.includes("mist")||o.includes("fog")?"cloudy":o.includes("thunder")?"rainy":"sunny"},f=async(e,o)=>{if("zip"===e.type){let t=e.country?"".concat(e.zipCode,",").concat(e.country):e.zipCode,n=await fetch("".concat(l,"/zip?zip=").concat(encodeURIComponent(t),"&appid=").concat(o));if(!n.ok)throw Error("ZIP code not found. Please check the ZIP code and try again.");let a=await n.json();return{lat:a.lat,lon:a.lon,displayName:"".concat(a.name,", ").concat(a.country)}}{let t=e.city||e.query;e.state&&(t+=",".concat(e.state)),e.country&&(t+=",".concat(e.country));let n=await fetch("".concat(l,"/direct?q=").concat(encodeURIComponent(t),"&limit=1&appid=").concat(o));if(!n.ok)throw Error("Geocoding API error: ".concat(n.status));let a=await n.json();if(!a||0===a.length)throw Error(L(e));let i=a[0],r=i.state?"".concat(i.name,", ").concat(i.state,", ").concat(i.country):"".concat(i.name,", ").concat(i.country);return{lat:i.lat,lon:i.lon,displayName:r}}},w=()=>{let e,o;let t=new Date("2024-01-11T11:57:00Z"),n=(new Date().getTime()-t.getTime())/864e5%29.530588853/29.530588853*360,a=Math.round((1-Math.cos(n*Math.PI/180))*50);return n<1||n>359?(e="New Moon",o="\uD83C\uDF11"):n<90?(e="Waxing Crescent",o="\uD83C\uDF12"):n<91?(e="First Quarter",o="\uD83C\uDF13"):n<180?(e="Waxing Gibbous",o="\uD83C\uDF14"):n<181?(e="Full Moon",o="\uD83C\uDF15"):n<270?(e="Waning Gibbous",o="\uD83C\uDF16"):n<271?(e="Last Quarter",o="\uD83C\uDF17"):(e="Waning Crescent",o="\uD83C\uDF18"),{phase:e,illumination:a,emoji:o,phaseAngle:n}},x=(e,o)=>{let t={};return e.list.forEach(e=>{var n,a,l;let i=new Date(1e3*e.dt).toLocaleDateString("en-US",{weekday:"long"}),r=new Date(1e3*e.dt).toLocaleTimeString("en-US",{hour:"numeric",hour12:!0});t[i]?(t[i].high=Math.max(t[i].high,e.main.temp),t[i].low=Math.min(t[i].low,e.main.temp)):t[i]={high:e.main.temp,low:e.main.temp,condition:e.weather[0].main,description:e.weather[0].description,humidity:[],pressure:[],windSpeed:[],windDir:[],cloudCover:[],precipChance:[],hourlyForecast:[]},t[i].humidity.push(e.main.humidity),t[i].pressure.push(e.main.pressure),t[i].windSpeed.push((null===(n=e.wind)||void 0===n?void 0:n.speed)||0),(null===(a=e.wind)||void 0===a?void 0:a.deg)&&t[i].windDir.push(A(e.wind.deg)),t[i].cloudCover.push((null===(l=e.clouds)||void 0===l?void 0:l.all)||0);let s=e.weather[0].main.toLowerCase().includes("rain")?Math.min(e.main.humidity/100*100,85):0;t[i].precipChance.push(s),t[i].hourlyForecast.length<8&&t[i].hourlyForecast.push({time:r,temp:o?Math.round(e.main.temp):d(e.main.temp),condition:y(e.weather[0].main),precipChance:Math.round(s)})}),Object.entries(t).map(e=>{let[n,a]=e,l=Math.round(a.humidity.reduce((e,o)=>e+o,0)/a.humidity.length),i=Math.round(a.pressure.reduce((e,o)=>e+o,0)/a.pressure.length),r=Math.round(a.windSpeed.reduce((e,o)=>e+o,0)/a.windSpeed.length),s=Math.round(a.cloudCover.reduce((e,o)=>e+o,0)/a.cloudCover.length),c=Math.round(a.precipChance.reduce((e,o)=>e+o,0)/a.precipChance.length),u=a.windDir.length>0?a.windDir.sort((e,o)=>a.windDir.filter(o=>o===e).length-a.windDir.filter(e=>e===o).length).pop():void 0;return{day:n,date:new Date(Date.now()+864e5*Object.keys(t).indexOf(n)).toLocaleDateString("en-US",{month:"short",day:"numeric"}),highTemp:o?Math.round(a.high):d(a.high),lowTemp:o?Math.round(a.low):d(a.low),condition:y(a.condition),description:a.description,details:{humidity:l,windSpeed:r,windDirection:u,pressure:"".concat(i," hPa"),cloudCover:s,precipitationChance:c>0?c:void 0,visibility:void 0,uvIndex:void 0},hourlyForecast:a.hourlyForecast}})},A=e=>["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"][Math.round(e/22.5)%16],v=(e,o,t)=>"inHg"===t||void 0===t&&P(o)?"".concat((.02953*e).toFixed(2)," in"):"".concat(Math.round(e)," hPa"),P=e=>["US","CA","PR","VI","GU","AS","MP"].includes(e),I=async(e,o,t)=>{console.log("=== UV INDEX REAL-TIME DEBUG ==="),console.log("Coordinates:",{lat:e,lon:o});try{var n,l;let i="".concat("https://api.openweathermap.org/data/3.0","/onecall?lat=").concat(e,"&lon=").concat(o,"&exclude=minutely,daily,alerts&appid=").concat(t);console.log("One Call API URL for UV Index:",i);let r=await fetch(i);if(console.log("One Call API Response Status:",r.status),!r.ok){console.error("One Call API failed for UV Index:",r.status,r.statusText),console.log("Falling back to basic UV endpoint (daily maximum)...");let n="".concat(a,"/uvi?lat=").concat(e,"&lon=").concat(o,"&appid=").concat(t),l=await fetch(n);if(l.ok){let e=await l.json(),o=e.value||e.uvi||0;console.log("Fallback daily maximum UV Index:",o);let t=new Date().getHours(),n=E(o,t);return console.log("Estimated current UV from daily max:",n),Math.round(n)}return 0}let s=await r.json();console.log("One Call API Response Data:",s);let c=(null===(n=s.current)||void 0===n?void 0:n.uvi)||0;if(console.log("Current UV Index from One Call API:",c),0===c){let e=(null===(l=s.current)||void 0===l?void 0:l.dt)||Date.now()/1e3,o=s.timezone_offset||0,t=new Date(1e3*(e+o)).getHours();return console.log("Local hour:",t),console.log("UV Index: 0 (likely nighttime)"),0}let d=Math.round(c);return console.log("Final UV Index (rounded):",d),d}catch(e){return console.error("UV Index API error:",e),0}},E=(e,o)=>{if(o<6||o>18)return 0;let t=Math.abs(o-13),n=Math.exp(-(t*t)/18),a=e*n;return console.log("UV estimation: hour=".concat(o,", dailyMax=").concat(e,", multiplier=").concat(n.toFixed(3),", estimated=").concat(a.toFixed(2))),Math.max(0,a)},b=async(e,o,t)=>{var n,l,i,s,c,d,u,h,g,p,m,y,f,w,x,A,v,P,I;console.log("=== POLLEN DATA DEBUG ==="),console.log("Coordinates:",{lat:e,lon:o}),console.log("OpenWeather API Key available:",!!t);let E=r();if(console.log("Google Pollen API Key available:",!!E),E)try{console.log("\uD83D\uDD0D Attempting to fetch real pollen data from Google Pollen API...");let t="https://pollen.googleapis.com/v1/forecast:lookup?key=".concat(E,"&location.latitude=").concat(e,"&location.longitude=").concat(o,"&days=1");console.log("Google Pollen API URL:",t);let a=await fetch(t);if(console.log("Google Pollen API Response Status:",a.status),console.log("Google Pollen API Response Headers:",Object.fromEntries(a.headers.entries())),a.ok){let e=await a.json();console.log("Google Pollen API Response Data:",e),console.log("Full Google Pollen API Response:",JSON.stringify(e,null,2));let o=null===(n=e.dailyInfo)||void 0===n?void 0:n[0];if(console.log("Daily Info:",o),o){console.log("Pollen Type Info:",o.pollenTypeInfo),console.log("Plant Info:",o.plantInfo);let e=e=>0===e?"No Data":e<=2?"Low":e<=5?"Moderate":e<=8?"High":"Very High",t=(o,t)=>{let n={};return null==o||o.forEach(o=>{let a=o.code||o.displayName||"";if(t.some(e=>a.includes(e))){var l,i;let t=(null===(l=o.indexInfo)||void 0===l?void 0:l.value)||0,r=(null===(i=o.indexInfo)||void 0===i?void 0:i.category)||e(t);n[o.displayName||a]=r}}),n},n=o.plantInfo||[],a=t(n,["MAPLE","ELM","COTTONWOOD","ALDER","BIRCH","ASH","PINE","OAK","JUNIPER"]),r=t(n,["GRAMINALES"]),m=t(n,["RAGWEED","WEED"]),y=null===(l=o.pollenTypeInfo)||void 0===l?void 0:l.find(e=>"TREE"===e.code),f=null===(i=o.pollenTypeInfo)||void 0===i?void 0:i.find(e=>"GRASS"===e.code),w=null===(s=o.pollenTypeInfo)||void 0===s?void 0:s.find(e=>"WEED"===e.code);0===Object.keys(a).length&&y&&(a.Tree=(null===(c=y.indexInfo)||void 0===c?void 0:c.category)||e((null===(d=y.indexInfo)||void 0===d?void 0:d.value)||0)),0===Object.keys(r).length&&f&&(r.Grass=(null===(u=f.indexInfo)||void 0===u?void 0:u.category)||e((null===(h=f.indexInfo)||void 0===h?void 0:h.value)||0)),0===Object.keys(m).length&&w&&(m.Weed=(null===(g=w.indexInfo)||void 0===g?void 0:g.category)||e((null===(p=w.indexInfo)||void 0===p?void 0:p.value)||0)),console.log("Tree breakdown:",a),console.log("Grass breakdown:",r),console.log("Weed breakdown:",m);let x={tree:a,grass:r,weed:m};return console.log("Final parsed pollen data from Google API:",x),x}console.warn("No daily pollen info found in Google API response"),console.log("Available keys in response:",Object.keys(e))}else{console.error("Google Pollen API failed:",a.status,a.statusText);let e=await a.text();console.error("Error response:",e)}}catch(e){console.error("Google Pollen API error:",e)}console.log("\uD83D\uDD04 Falling back to OpenWeather Air Pollution API for basic air quality data...");try{let n="".concat(a,"/air_pollution?lat=").concat(e,"&lon=").concat(o,"&appid=").concat(t);console.log("OpenWeather Air Pollution API URL:",n);let l=await fetch(n);if(console.log("OpenWeather Air Pollution API Response Status:",l.status),!l.ok)return console.warn("OpenWeather Air Pollution API failed:",l.status,l.statusText),{tree:{Tree:"No Data"},grass:{Grass:"No Data"},weed:{Weed:"No Data"}};let i=await l.json();console.log("OpenWeather Air Pollution API Response Data:",i);let r=(null===(f=i.list)||void 0===f?void 0:null===(y=f[0])||void 0===y?void 0:null===(m=y.main)||void 0===m?void 0:m.aqi)||1,s=(null===(A=i.list)||void 0===A?void 0:null===(x=A[0])||void 0===x?void 0:null===(w=x.components)||void 0===w?void 0:w.pm10)||0,c=(null===(I=i.list)||void 0===I?void 0:null===(P=I[0])||void 0===P?void 0:null===(v=P.components)||void 0===v?void 0:v.pm2_5)||0;console.log("Air quality fallback data:",{airQualityIndex:r,pm10:s,pm2_5:c});let d=e=>0===e?"No Data":e<=2?"Low":e<=5?"Moderate":e<=8?"High":"Very High",u={tree:{Tree:d(Math.min(Math.round(10*r),100))},grass:{Grass:d(Math.min(Math.round(8*r),100))},weed:{Weed:d(Math.min(Math.round(6*r),100))}};return console.log("Fallback pollen data (air quality based):",u),console.log("Note: Using air quality fallback. For real pollen data, ensure Google Pollen API key is properly configured."),u}catch(e){return console.warn("OpenWeather Air Pollution API error:",e),console.log("Returning default pollen values"),{tree:{Tree:"No Data"},grass:{Grass:"No Data"},weed:{Weed:"No Data"}}}},N=async(e,o,t)=>{var n,l,s,c,d,u,h,g;console.log("=== FETCHING AIR QUALITY DATA ==="),console.log("=== AIR QUALITY COORDINATE DEBUG ==="),console.log("City being searched:",t||"Unknown"),console.log("Coordinates passed to Air Quality API:",{latitude:e,longitude:o}),console.log("Timestamp:",new Date().toISOString()),console.log("Previous coordinates (if cached):",globalThis.lastAirQualityCoordinates),globalThis.lastAirQualityCoordinates={latitude:e,longitude:o},console.log("Fetching Air Quality for:",t||"Unknown","at coordinates:",e,o);let p=r();if(console.log("Google Air Quality API Key available:",!!p),p)try{let t="https://airquality.googleapis.com/v1/currentConditions:lookup?key=".concat(p),a=JSON.stringify({location:{latitude:e,longitude:o}});console.log("Google Air Quality API URL:",t),console.log("Google Air Quality API Payload:",a);let i=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:a});if(console.log("Google Air Quality API Response Status:",i.status),console.log("Google Air Quality API Response Headers:",Object.fromEntries(i.headers.entries())),i.ok){let e=await i.json();console.log("Google Air Quality API Response Data:",e),console.log("Full Google Air Quality API Response:",JSON.stringify(e,null,2));let o=null==e?void 0:e.indexes;console.log("Google AQI Indexes:",o);let t=(null==o?void 0:null===(n=o[0])||void 0===n?void 0:n.aqi)||0,a=(null==o?void 0:null===(l=o[0])||void 0===l?void 0:l.category)||"No Data";console.log("Google AQI value extracted:",t),console.log("Google AQI category extracted:",a);let r=null==e?void 0:null===(s=e.indexes)||void 0===s?void 0:s[0];r&&console.log("Google AQI additional info:",{displayName:r.displayName,aqiDisplay:r.aqiDisplay,category:r.category,dominantPollutant:r.dominantPollutant});let c={aqi:t,category:a};return console.log("Final Google air quality object:",c),c}{console.error("Google Air Quality API failed:",i.status,i.statusText);let e=await i.text();console.error("Google API Error response:",e)}}catch(e){console.error("Google Air Quality API error:",e)}else console.warn("No Google Air Quality API key found.");console.log("\uD83D\uDD04 Falling back to OpenWeather Air Pollution API...");try{let t=i(),n="".concat(a,"/air_pollution?lat=").concat(e,"&lon=").concat(o,"&appid=").concat(t);console.log("OpenWeather Air Pollution API URL:",n);let l=await fetch(n);if(console.log("OpenWeather Air Pollution API Response Status:",l.status),l.ok){let e=await l.json();console.log("OpenWeather Air Pollution API Response Data:",e);let o=(null===(u=e.list)||void 0===u?void 0:null===(d=u[0])||void 0===d?void 0:null===(c=d.main)||void 0===c?void 0:c.aqi)||1,t=(null===(g=e.list)||void 0===g?void 0:null===(h=g[0])||void 0===h?void 0:h.components)||{};console.log("OpenWeather AQI (1-5 scale):",o),console.log("OpenWeather components:",t);let n=T(o,t),a=F(n);return console.log("Converted OpenWeather AQI to EPA scale:",n),console.log("AQI Category:",a),{aqi:n,category:a}}console.error("OpenWeather Air Pollution API failed:",l.status,l.statusText)}catch(e){console.error("OpenWeather Air Pollution API error:",e)}return console.warn("All AQI APIs failed. Returning default values."),{aqi:0,category:"No Data"}},T=(e,o)=>{let t={1:{min:0,max:50},2:{min:51,max:100},3:{min:101,max:150},4:{min:151,max:200},5:{min:201,max:300}},n=t[e]||t[1];if(o.pm2_5&&o.pm10){let e=C(o.pm2_5),t=k(o.pm10);return console.log("PM2.5 AQI calculation:",{pm25:o.pm2_5,aqi:e}),console.log("PM10 AQI calculation:",{pm10:o.pm10,aqi:t}),Math.max(e,t)}let a=Math.round((n.min+n.max)/2);return console.log("OpenWeather AQI ".concat(e," converted to EPA AQI: ").concat(a," (range: ").concat(n.min,"-").concat(n.max,")")),a},C=e=>{for(let o of[{low:0,high:12,aqiLow:0,aqiHigh:50},{low:12.1,high:35.4,aqiLow:51,aqiHigh:100},{low:35.5,high:55.4,aqiLow:101,aqiHigh:150},{low:55.5,high:150.4,aqiLow:151,aqiHigh:200},{low:150.5,high:250.4,aqiLow:201,aqiHigh:300},{low:250.5,high:350.4,aqiLow:301,aqiHigh:400},{low:350.5,high:500.4,aqiLow:401,aqiHigh:500}])if(e>=o.low&&e<=o.high)return Math.round((o.aqiHigh-o.aqiLow)/(o.high-o.low)*(e-o.low)+o.aqiLow);return 500},k=e=>{for(let o of[{low:0,high:54,aqiLow:0,aqiHigh:50},{low:55,high:154,aqiLow:51,aqiHigh:100},{low:155,high:254,aqiLow:101,aqiHigh:150},{low:255,high:354,aqiLow:151,aqiHigh:200},{low:355,high:424,aqiLow:201,aqiHigh:300},{low:425,high:504,aqiLow:301,aqiHigh:400},{low:505,high:604,aqiLow:401,aqiHigh:500}])if(e>=o.low&&e<=o.high)return Math.round((o.aqiHigh-o.aqiLow)/(o.high-o.low)*(e-o.low)+o.aqiLow);return 500},F=e=>e<=50?"Good":e<=100?"Moderate":e<=150?"Unhealthy for Sensitive Groups":e<=200?"Unhealthy":e<=300?"Very Unhealthy":"Hazardous",O=async(e,o)=>{console.log("Fetching weather data for:",e);try{let o=i(),t=m(e);console.log("Parsed location query:",t);let{lat:n,lon:l,displayName:r}=await f(t,o);console.log("Geocoded location:",{lat:n,lon:l,displayName:r});let d="".concat(a,"/weather?lat=").concat(n,"&lon=").concat(l,"&appid=").concat(o,"&units=imperial");console.log("Fetching current weather from:",d);let u=await fetch(d);if(!u.ok)throw Error("Current weather API call failed: ".concat(u.status));let p=await u.json();console.log("Current weather response:",p);let y="".concat(a,"/forecast?lat=").concat(n,"&lon=").concat(l,"&appid=").concat(o,"&units=imperial");console.log("Fetching forecast from:",y);let A=await fetch(y);if(!A.ok)throw Error("Forecast API call failed: ".concat(A.status));let P=await A.json();console.log("Forecast response:",P);let E=p.sys.country,T=h(E);console.log("Using Fahrenheit:",T);let C=g(p.main.temp,E);console.log("Formatted temperature:",C);let k=x(P,T);console.log("Processed forecast:",k);let F=w();console.log("Moon phase:",F),console.log("=== FETCHING UV INDEX ===");let O=await I(n,l,o);console.log("UV Index fetched:",O);let L=await b(n,l,o);console.log("Weather Data - Pollen:",L);let _=await N(n,l,r);console.log("Weather Data - Air Quality:",_);let S={location:r,country:E,temperature:C.value,unit:C.unit,condition:p.weather[0].main,description:p.weather[0].description,humidity:p.main.humidity,wind:{speed:p.wind.speed,direction:p.wind.deg?s(p.wind.deg):void 0,gust:p.wind.gust},pressure:v(p.main.pressure,E),sunrise:c(p.sys.sunrise,p.timezone),sunset:c(p.sys.sunset,p.timezone),forecast:k,moonPhase:F,uvIndex:O,aqi:_.aqi,aqiCategory:_.category,pollen:L};return console.log("Final weather data:",S),S}catch(e){throw console.error("Error fetching weather data:",e),e}},L=e=>{switch(e.type){case"zip":return"ZIP/Postal code not found. Please check the code and try again.";case"city_state":return'City/State combination not found. Try "City, State" format (e.g., "New York, NY").';case"city_country":return'City/Country combination not found. Try "City, Country" format (e.g., "London, UK").';case"city_only":return'City not found. Try including state/country (e.g., "Paris, France").';default:return"Location not found. Please check the spelling and try again."}},_=async e=>{let o=i(),[t,n]=e.split(",").map(Number);if(isNaN(t)||isNaN(n))throw Error("Invalid coordinates");try{let e="".concat(a,"/weather?lat=").concat(t,"&lon=").concat(n,"&appid=").concat(o,"&units=imperial");console.log("Fetching current weather from:",e);let l=await fetch(e);if(!l.ok)throw Error("Current weather API call failed: ".concat(l.status));let i=await l.json();console.log("Current weather response:",i);let r="".concat(a,"/forecast?lat=").concat(t,"&lon=").concat(n,"&appid=").concat(o,"&units=imperial");console.log("Fetching forecast from:",r);let d=await fetch(r);if(!d.ok)throw Error("Forecast API call failed: ".concat(d.status));let u=await d.json();console.log("Forecast response:",u);let p=i.sys.country,m=h(p);console.log("Using Fahrenheit:",m);let y=g(i.main.temp,p);console.log("Formatted temperature:",y);let f=x(u,m);console.log("Processed forecast:",f);let A=w();console.log("Moon phase:",A),console.log("=== FETCHING UV INDEX ===");let P=await I(t,n,o);console.log("UV Index fetched:",P),console.log("=== FETCHING POLLEN DATA ===");let E=await b(t,n,o);console.log("Weather Data - Pollen:",E);let T=await N(t,n,"".concat(i.name,", ").concat(i.sys.country));console.log("Weather Data - Air Quality:",T);let C={location:"".concat(i.name,", ").concat(i.sys.country),country:p,temperature:y.value,unit:y.unit,condition:i.weather[0].main,description:i.weather[0].description,humidity:i.main.humidity,wind:{speed:i.wind.speed,direction:i.wind.deg?s(i.wind.deg):void 0,gust:i.wind.gust},pressure:v(i.main.pressure,p),sunrise:c(i.sys.sunrise,i.timezone),sunset:c(i.sys.sunset,i.timezone),forecast:f,moonPhase:A,uvIndex:P,aqi:T.aqi,aqiCategory:T.category,pollen:E};return console.log("Final weather data:",C),C}catch(e){throw console.error("Error fetching weather data:",e),e}}}}]);